'''
==============================================================================================
@ Title: 부분수열의 합
@ URL: https://www.acmicpc.net/problem/14225
@ Author: jopemachine
@ Created Date: 9/29/2022, 12:05:47 PM
@ Description:
수열 S가 주어졌을 때, 수열 S의 부분 수열의 합으로 나올 수 없는 가장 작은 자연수를 구하는 프로그램을 작성하시오. 예를 들어, S
= [5, 1, 2]인 경우에 1, 2, 3(=1+2), 5, 6(=1+5), 7(=2+5), 8(=1+2+5)을 만들 수 있다.
하지만, 4는 만들 수 없기 때문에 정답은 4이다.
@ Input: 첫째 줄에 수열 S의 크기 N이 주어진다. (1 ≤ N ≤ 20) 둘째 줄에는 수열 S가 주어진다. S를 이루고있는 수는
100,000보다 작거나 같은 자연수이다.
@ Output: 첫째 줄에 수열 S의 부분 수열의 합으로 나올 수 없는 가장 작은 자연수를 출력한다.
==============================================================================================
'''

N = int(input())
S = [*map(int, input().split())]

is_possible = {}

# 모든 경우의 수가 2^N으로 표시될 수 있기 때문에 비트 마스크로 풀 수 있다.
for i in range(1 << N):
  sum = 0
  for j in range(len(S)):
    if i & (1 << j):
      sum += S[j]

  is_possible[sum] = True

res = 1
while is_possible.get(res):
  res += 1
  continue

print(res)